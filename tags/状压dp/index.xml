<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>状压dp on doubleki&#39;s blog</title>
    <link>https://blog.doubleki.eu.org/tags/%E7%8A%B6%E5%8E%8Bdp/</link>
    <description>Recent content in 状压dp on doubleki&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 29 Apr 2023 17:06:04 +0800</lastBuildDate><atom:link href="https://blog.doubleki.eu.org/tags/%E7%8A%B6%E5%8E%8Bdp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>解题报告：P8176 牧场的安排</title>
      <link>https://blog.doubleki.eu.org/posts/2023/04/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8Ap8176-%E7%89%A7%E5%9C%BA%E7%9A%84%E5%AE%89%E6%8E%92/</link>
      <pubDate>Sat, 29 Apr 2023 17:06:04 +0800</pubDate>
      
      <guid>https://blog.doubleki.eu.org/posts/2023/04/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8Ap8176-%E7%89%A7%E5%9C%BA%E7%9A%84%E5%AE%89%E6%8E%92/</guid>
      <description>题目链接：许昌高中高级OJ（内网），许昌高中高级OJ（外网），LibreOJ
思路 本题使用状压dp解决
定义状态：$dp[i][j][k]$ 表示前 $i$ 行在第 $i$ 行状态为 $j$ 时，放置 $k$ 个牧场总方案数
状态转移：
$$dp[l][i][k]=\sum \limits_{check(i,j)} {dp[l-1][j][k-getOneNumber(i)]}$$
最终结果为：
$$\sum \limits_{i=0} \limits^{n*m} \sum \limits_{j \in sit} {dp[n][i][j]}$$
代码 #include &amp;lt;bits/stdc++.h&amp;gt; using namespace std; typedef long long T; const int MAXN=12+2; const int MOD=1e8; int n,m; vector&amp;lt;pair&amp;lt;int,int&amp;gt;&amp;gt; sit; int status[MAXN]; T ans; T dp[MAXN][1&amp;lt;&amp;lt;MAXN][MAXN*MAXN]; int getOneNumber(int x) { int res=0; while(x) { if(x&amp;amp;1) { res++; } x=x&amp;gt;&amp;gt;1; } return res; } int main() { cin&amp;gt;&amp;gt;n&amp;gt;&amp;gt;m; for(int i=1;i&amp;lt;=n;i++) { for(int j=1;j&amp;lt;=m;j++) { int tmp; cin&amp;gt;&amp;gt;tmp; if(tmp) { tmp=0; } else { tmp=1; } status[i]=status[i]|(tmp&amp;lt;&amp;lt;(j-1)); } } for(int i=0;i&amp;lt;(1&amp;lt;&amp;lt;m);i++) { if(i&amp;amp;(i&amp;lt;&amp;lt;1)) { continue; } sit.</description>
    </item>
    
    <item>
      <title>解题报告：P8175 骑士</title>
      <link>https://blog.doubleki.eu.org/posts/2023/04/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8Ap8175-%E9%AA%91%E5%A3%AB/</link>
      <pubDate>Sat, 29 Apr 2023 16:56:14 +0800</pubDate>
      
      <guid>https://blog.doubleki.eu.org/posts/2023/04/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8Ap8175-%E9%AA%91%E5%A3%AB/</guid>
      <description>题目链接：许昌高中高级OJ（内网），许昌高中高级OJ（外网），LibreOJ
思路 本题使用状压dp解决
定义状态：$dp[i][j][k]$ 表示前 $i$ 行在第 $i$ 行状态为 $j$ 时，放置 $k$ 个国王总方案数
状态转移方程：
$$dp[l][i][k]=\sum \limits_{check(i,j)} {dp[l-1][j][k-getOneNumber(i)]}$$
代码 #include &amp;lt;bits/stdc++.h&amp;gt; using namespace std; const int MAXN=10+2; int n,k,t; long long ans; long long dp[MAXN][1&amp;lt;&amp;lt;MAXN][MAXN*MAXN]; vector&amp;lt;pair&amp;lt;int,int&amp;gt;&amp;gt; situ; inline int readInt() { int x = 0, f = 1; char ch = getchar(); while (ch &amp;lt; &amp;#39;0&amp;#39; || ch &amp;gt; &amp;#39;9&amp;#39;) { if (ch == &amp;#39;-&amp;#39;) { f = -1; } ch = getchar(); } while (ch &amp;gt;= &amp;#39;0&amp;#39; &amp;amp;&amp;amp; ch &amp;lt;= &amp;#39;9&amp;#39;) { x = x * 10 + ch - &amp;#39;0&amp;#39;; ch = getchar(); } return x * f; } void write(long long x) { if (x &amp;lt; 0) { putchar(&amp;#39;-&amp;#39;), x = -x; } if (x &amp;gt; 9) { write(x / 10); } putchar(x % 10 + &amp;#39;0&amp;#39;); return; } int getOneNumber(int x) { int res=0; while(x) { if(x&amp;amp;1) { res++; } x=x&amp;gt;&amp;gt;1; } return res; } int main() { n=readInt(); k=readInt(); for(int i=0;i&amp;lt;(1&amp;lt;&amp;lt;n);i++) { if(i&amp;amp;(i&amp;lt;&amp;lt;1)) { continue; } situ.</description>
    </item>
    
  </channel>
</rss>
